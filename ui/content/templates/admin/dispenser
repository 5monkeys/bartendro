{% extends 'admin/layout' %}
{% block body %}
<div class="row-fluid">
    <div class="span6">
    <h2>Dispensers</h2>
      {% if saved %}
         <p>Your changes have been saved.</p>
      {% endif %}
       There are {{ count }} dispensers available. 
    </div>
    <div class="span6">
          <a onclick="reset()" class="btn btn-danger">reset</a>
          <a onclick="test_dispensers()" class="btn btn-warning">test dispensers</a>
          <a onclick="check_levels()" class="btn btn-info">liquid levels</a>
    </div>
</div>
<div class="row-fluid">
  <div class="span12">
     <form method="POST" action="/admin/dispenser/save">
         {% for i in range(1, count + 1) %}
            <div>
                {% if states[i-1] == 1 %}
                      {{ form["dispenser%s" % i].label(class="dispenser-out")}}: 
                {% elif states[i-1] == 2 %}
                      {{ form["dispenser%s" % i].label(class="dispenser-warning")}}: 
                {% else %}
                      {{ form["dispenser%s" % i].label(class="dispenser-ok")}}: 
                {% endif %}
                      {{ form["dispenser%s" % i](class="form") }}
                <a class="btn btn-large" id="disp{{ i }}" onclick="toggle({{ i }})">turn on</a>
                <a class="btn btn-large" id="test{{ i }}" onclick="test_dispense({{ i }})">dispense {{ calibrate_ml }}ml</a>
                      {{ form["actual%s" % i](size="3") }}
            </div>
        {% endfor %}
        <div>
            {{ form.cancel(class="btn") }}
            {{ form.save(class="btn btn-primary") }}
        </div>
     </form>
   </div>
</div>
<script type="text/javascript">
var dispensers = [ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ];

function toggle(disp)
{
    if (disp < 1 || disp > 15)
        return;

    //$("#size_text").text(drink_size + " fluid ounces");

    dispensers[disp-1] = !dispensers[disp-1];
    $.ajax({
            url: "/ws/dispenser/" + disp + "/" + (dispensers[disp-1] ? "on" : "off") ,
            success: function(html)
            {
                if (dispensers[disp-1] == true)
                    $("#disp" + disp).text('turn off');
                else
                    $("#disp" + disp).text('turn on');
            }
    });
}
function test_dispense(disp)
{
    if (disp < 1 || disp > 15)
        return;

    $("#test" + disp).text('dispensing');
    $("#test" + disp).attr('disabled', true);
    $.ajax({
            url: "/ws/dispenser/" + disp + "/test" ,
            success: function(html)
            {
                $("#test" + disp).text('dispense {{ calibrate_ml }}ml');
                $("#test" + disp).attr('disabled', false);
            }
    });
}
function reset()
{
    $.ajax({
            url: "/ws/reset" ,
            success: function(html)
            {
            }
    });
}
function test_dispensers()
{
    $("#test_dispensers").text('testing...');
    $("#test_dispensers").attr('disabled', true);
    $.ajax({
            url: "/ws/test" ,
            success: function(html)
            {
                if (html != "")
                    alert(html);

                $("#test_dispensers").text('test dispensers');
                $("#test_dispensers").attr('disabled', false);
            }
    });
}
function check_levels()
{
    $("#check_levels").text("checking levels...");
    $("#check_levels").attr('disabled', true);
    $.ajax({
            url: "/ws/checklevels" ,
            success: function(html)
            {
                 location.reload();
            },
            error: function(xhr, txtStatus, errorThrown)
            {
                 alert("Error checking levels. Useless error info: " + errorThrown);
                 location.reload();
            }
    });
}
</script>
{% endblock %}
